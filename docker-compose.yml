services:
  adote-facil-postgres:
    image: postgres:14-alpine
    container_name: 'adote-facil-postgres'
    env_file:
      - ./backend/.env
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_CONTAINER_PORT: ${POSTGRES_CONTAINER_PORT}
    ports:
      - ${POSTGRES_CONTAINER_PORT}:5432
    volumes:
      - db_data:/var/lib/postgresql/data
    networks:
      - adote-facil-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 3s
      timeout: 3s
      retries: 5

  adote-facil-backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: 'adote-facil-backend'
    ports:
      - "8080:8080"
    environment:
      - NODE_ENV=production
    depends_on:
      adote-facil-postgres:
        condition: service_healthy
    command: sh -c "until nc -z adote-facil-postgres 5432; do echo 'Waiting for postgres...'; sleep 1; done; npm start"
    networks:
      - adote-facil-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3       

  adote-facil-frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: 'adote-facil-frontend'
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
    depends_on:
      - adote-facil-backend
    networks:
      - adote-facil-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  db_data:

networks:
  adote-facil-network:
    driver: bridge